{"version":3,"sources":["components/AppContainer.js","debugging/DevDetect.js","components/Header/LinkButton.js","components/Header.js","components/ModelList/ModelBox.js","components/ModelList/ModelList.js","components/ModelUpload/subcomponents/UploadButton.js","components/ModelUpload/ModelUpload.js","utils/idGenerator.js","components/DataViewer/DataTable.js","components/DataViewer/DataViewer.js","App.js","store/reducers/auth.js","store/reducers/index.js","store/actions/index.js","store/store.js","index.js"],"names":["flexBox","display","justifyContent","width","minHeight","Container","children","style","className","process","env","NODE_ENV","LinkButton","linkUrl","buttonText","buttonClassNames","currentUrl","to","Header","useLocation","pathname","flex","options","scales","yAxes","ticks","suggestedMin","suggestedMax","beginAtZero","xAxes","scaleLabel","labelString","ModelBox","modelData","paddingRight","margin","name","fontSize","fontWeight","loss","toFixed","uploadDate","regularizer","optimizer","data","models","regressionType","features","trainingAccuracyHistory","trainingLossHistory","testAccuracy","comments","labels","Array","fill","datasets","label","backgroundColor","borderColor","borderWidth","ModelList","useState","searchValue","setSearchValue","type","placeholder","onChange","event","target","value","filter","model","searchItems","split","string","indexOf","map","key","UploadButton","onClick","enabled","disabled","uploadStatuses","ModelUpload","fileIsH5","fileProperties","setFileProperties","file","setFile","uploadStatus","setUploadStatus","handleFiles","a","f","files","console","log","fileIsChosen","fileReadyToUpload","upload","e","preventDefault","formData","FormData","append","axios","post","headers","status","id","idGenerator","uuid4","useStyles","makeStyles","table","minWidth","modelToViewNotation","supportCode","wellBeingScore","weeklySteps","weeklyCalls","errorRate","postCode","DataTable","classes","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","Object","keys","TableCell","TableBody","entry","values","val","idGen","scope","DataViewer","tableData","setTableData","numberOfEntries","setNumberOfEntres","useEffect","sleep","ms","Promise","resolve","setTimeout","config","body","JSON","stringify","get","res","payload","parse","getData","Math","min","App","path","initialState","token","localStorage","getItem","isAuthenticated","loading","user","app","combineReducers","auth","state","action","setItem","removeItem","middleware","thunk","persistConfig","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","storeAndPersistor","Appp","withStyles","theme","html","breakpoints","up","baseSize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c668e6bd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../css/sizing.css\";\r\n\r\nconst flexBox = {\r\n  // position: \"absolute\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  width: \"100%\",\r\n  minHeight: \"100%\",\r\n};\r\n\r\nconst Container = ({ children }) => {\r\n  return (\r\n    <div style={flexBox}>\r\n      <div className=\"appcontainer content-box\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {};\r\n\r\nexport default Container;\r\n","import process from \"process\";\r\n\r\nconst development =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport default function isDev() {\r\n  return development;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../header.css\";\r\n\r\nconst LinkButton = ({ linkUrl, buttonText, currentUrl }) => {\r\n  const isSelected = linkUrl === currentUrl;\r\n  const buttonClassNames =\r\n    \"header-button\" + (isSelected ? \" header-button-selected\" : \"\");\r\n\r\n  return (\r\n    <Link to={linkUrl} className={buttonClassNames}>\r\n      <div>{buttonText}</div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useRouteMatch, useLocation } from \"react-router-dom\";\r\nimport isDev from \"../debugging/DevDetect\";\r\nimport \"./header.css\";\r\nimport \"../css/sizing.css\";\r\nimport \"../css/colors.css\";\r\nimport LinkButton from \"./Header/LinkButton\";\r\n\r\nconst Logo = () => (\r\n  <div className=\"header-logo\">\r\n    NHS Wellbeing\r\n    <br />\r\n    Predictor\r\n  </div>\r\n);\r\n\r\nconst Header = () => {\r\n  const { pathname: currentUrl } = useLocation();\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"flex-box-vert-align\">\r\n        {/* <Logo style={{ flex: 1 }} /> */}\r\n        <div\r\n          className=\"flex-box-vert-align overflow-y\"\r\n          style={{ flex: 4, justifyContent: \"space-between\" }}\r\n        >\r\n          <div className=\"flex-box-vert-align\">\r\n            <LinkButton\r\n              linkUrl=\"/modellist\"\r\n              buttonText=\"Model Viewer\"\r\n              currentUrl={currentUrl}\r\n            />\r\n\r\n            <LinkButton\r\n              linkUrl=\"/modelupload\"\r\n              buttonText=\"Model Upload\"\r\n              currentUrl={currentUrl}\r\n            />\r\n            <LinkButton\r\n              linkUrl=\"/dataViewer\"\r\n              buttonText=\"Data Viewer\"\r\n              currentUrl={currentUrl}\r\n            />\r\n            {/* {isDev() ? (\r\n              <LinkButton\r\n                className=\"dim\"\r\n                linkUrl=\"/test\"\r\n                buttonText=\"[Dev] Debugging Test\"\r\n                currentUrl={currentUrl}\r\n              />\r\n            ) : null} */}\r\n          </div>\r\n          {/* <div\r\n            className=\"flex-box-vert-align\"\r\n            style={{ justifyContent: \"flex-end\" }}\r\n          >\r\n            <LinkButton\r\n              linkUrl=\"/login\"\r\n              buttonText=\"Login\"\r\n              currentUrl={currentUrl}\r\n            />\r\n            <LinkButton\r\n              linkUrl=\"/register\"\r\n              buttonText=\"Sign up\"\r\n              currentUrl={currentUrl}\r\n            />\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./model-list.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        display: true,\r\n        ticks: {\r\n          suggestedMin: 0, // minimum will be 0, unless there is a lower value.\r\n          suggestedMax: 10,\r\n          // OR //\r\n          beginAtZero: true, // minimum value will be 0.\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: \"epoch\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const ModelBox = ({ modelData }) => {\r\n  return (\r\n    <div className=\"model-box\">\r\n      <div className=\"model-box-text\" style={{ paddingRight: \"40px\" }}>\r\n        <h1 style={{ margin: 0 }}>{modelData.name}</h1>\r\n        <br />\r\n        <div style={{ fontSize: \"1.4em\" }}>\r\n          Test loss:{\"  \"}\r\n          <span style={{ fontWeight: \"bold\" }}>\r\n            {modelData.loss.toFixed(1)}\r\n          </span>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          Upload date:{\"  \"}\r\n          <span style={{ fontWeight: \"bold\" }}>{modelData.uploadDate}</span>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          Regularizer:{\"  \"}\r\n          <span style={{ fontWeight: \"bold\" }}>{modelData.regularizer}</span>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          Optimizer:{\"  \"}\r\n          <span style={{ fontWeight: \"bold\" }}>{modelData.optimizer}</span>\r\n        </div>\r\n        <br />\r\n        {/* <div>\r\n          Features used{\" \"}\r\n          <span style={{ fontWeight: \"bold\" }}>\r\n            ({modelData.features.length + \" \"} total)\r\n          </span>\r\n          :\r\n          <ol style={{ fontWeight: \"bold\" }}>\r\n            {modelData.features.map(featureString => (\r\n              <li>{featureString}</li>\r\n            ))}\r\n          </ol>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"model-box-text\">\r\n        <Line\r\n          // data={{\r\n          //   datasets: [\r\n          //     {\r\n          //       label: \"Training Accuracy\",\r\n          //       data: modelData.trainingAccuracyHistory\r\n          //     }\r\n          //   ],\r\n          //   backgroundColor: \"rgb(255, 0,0)\",\r\n          //   borderColor: \"rgb(255, 0,0)\"\r\n          // }}\r\n          data={modelData.data}\r\n          options={options}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable no-restricted-syntax */\r\nimport React, { useState } from \"react\";\r\nimport { ModelBox } from \"./ModelBox\";\r\nimport \"./model-list.css\";\r\n\r\nconst data1 = {\r\n  // labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"ff\"],\r\n  labels: Array(10).fill(\"\"),\r\n  datasets: [\r\n    {\r\n      label: \"Loss\",\r\n      // data: [12, 19, 3, 5, 2, 3],\r\n      data: [4.7, 4.6, 4.9, 5.1, 5.0, 5.2, 4.9, 4.8, 4.6, 5],\r\n      backgroundColor: [\r\n        \"rgba(255, 99, 132, 0.0)\",\r\n        \"rgba(54, 162, 235, 0.2)\",\r\n        \"rgba(255, 206, 86, 0.2)\",\r\n        \"rgba(75, 192, 192, 0.2)\",\r\n        \"rgba(153, 102, 255, 0.2)\",\r\n        \"rgba(255, 159, 64, 0.2)\",\r\n      ],\r\n      borderColor: [\r\n        \"rgba(255, 99, 132, 1)\",\r\n        \"rgba(54, 162, 235, 1)\",\r\n        \"rgba(255, 206, 86, 1)\",\r\n        \"rgba(75, 192, 192, 1)\",\r\n        \"rgba(153, 102, 255, 1)\",\r\n        \"rgba(255, 159, 64, 1)\",\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n};\r\nconst mockModel = {\r\n  name: \"Model 1\",\r\n  uploadDate: \"23/03/2020\",\r\n  regressionType: \"-//-\",\r\n  optimizer: \"adam\",\r\n  regularizer: \"none\",\r\n\r\n  features: [\r\n    \"number of steps\",\r\n    \"calls per week\",\r\n    \"post code as world coordinates\",\r\n  ],\r\n  trainingAccuracyHistory: [\r\n    0.1,\r\n    0.33,\r\n    0.67,\r\n    0.74,\r\n    0.78,\r\n    0.82,\r\n    0.85,\r\n    0.85,\r\n    0.85,\r\n  ],\r\n  trainingLossHistory: [5, 5.2, 4.9, 4.8, 5.1, 4.9, 5.3, 5.1],\r\n  testAccuracy: 0.85,\r\n  loss: 5.1,\r\n  comments: [\r\n    \"This model performed well\",\r\n    \"dropping that one feature from learning helped\",\r\n  ],\r\n  data: data1,\r\n};\r\n\r\nconst data2 = {\r\n  // labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"ff\"],\r\n  labels: Array(10).fill(\"\"),\r\n  datasets: [\r\n    {\r\n      label: \"Loss\",\r\n      // data: [12, 19, 3, 5, 2, 3],\r\n      data: [5, 5.2, 4.9, 4.8, 5.1, 4.9, 5.3, 5.1, 5, 4.9, 4.8],\r\n      backgroundColor: [\r\n        \"rgba(255, 99, 132, 0.0)\",\r\n        \"rgba(54, 162, 235, 0.2)\",\r\n        \"rgba(255, 206, 86, 0.2)\",\r\n        \"rgba(75, 192, 192, 0.2)\",\r\n        \"rgba(153, 102, 255, 0.2)\",\r\n        \"rgba(255, 159, 64, 0.2)\",\r\n      ],\r\n      borderColor: [\r\n        \"rgba(255, 99, 132, 1)\",\r\n        \"rgba(54, 162, 235, 1)\",\r\n        \"rgba(255, 206, 86, 1)\",\r\n        \"rgba(75, 192, 192, 1)\",\r\n        \"rgba(153, 102, 255, 1)\",\r\n        \"rgba(255, 159, 64, 1)\",\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n};\r\n\r\nconst mockModel2 = {\r\n  name: \"Model 2\",\r\n  uploadDate: \"24/03/2020\",\r\n  regressionType: \"-//-\",\r\n  optimizer: \"sgd\",\r\n  regularizer: \"L2\",\r\n  features: [\r\n    \"number of steps\",\r\n    \"calls per week\",\r\n    \"post code as world coordinates\",\r\n  ],\r\n  trainingAccuracyHistory: [\r\n    0.1,\r\n    0.33,\r\n    0.67,\r\n    0.74,\r\n    0.78,\r\n    0.82,\r\n    0.85,\r\n    0.85,\r\n    0.85,\r\n  ],\r\n  trainingLossHistory: [4.7, 4.6, 4.9, 5.1, 5.0, 5.2, 4.9],\r\n  testAccuracy: 0.85,\r\n  loss: 5.0,\r\n  comments: [\r\n    \"This model performed well\",\r\n    \"dropping that one feature from learning helped\",\r\n  ],\r\n  data: data2,\r\n};\r\n\r\nconst modelNames = [\r\n  \"updated model\",\r\n  \"First basic model\",\r\n  \"Mock model 1\",\r\n  \"Mock model 2\",\r\n  \"Mock model 3\",\r\n];\r\n\r\nconst models = [mockModel, mockModel2];\r\n\r\nconst ModelList = () => {\r\n  const [searchValue, setSearchValue] = useState(null);\r\n\r\n  return (\r\n    <div className=\"model-list-container\">\r\n      <div className=\"filter-box\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by model name\"\r\n          onChange={(event) => setSearchValue(event.target.value)}\r\n        />\r\n      </div>\r\n      {models\r\n        .filter((model) => {\r\n          const { name } = model;\r\n          if (!searchValue) return true;\r\n          const searchItems = searchValue.split(\" \");\r\n          for (const string of searchItems) {\r\n            if (name.indexOf(string) !== -1) return true;\r\n          }\r\n          return false;\r\n        })\r\n        .map((model) => {\r\n          return <ModelBox key={model.name} modelData={model} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelList;\r\n","import React from \"react\";\r\n\r\nexport const UploadButton = ({ onClick, enabled }) => {\r\n  return (\r\n    <button onClick={onClick} disabled={!enabled}>\r\n      Upload model\r\n    </button>\r\n  );\r\n};\r\n","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { UploadButton } from \"./subcomponents/UploadButton\";\r\nimport \"./_modelUpload.css\";\r\n\r\nconst uploadStatuses = {\r\n  NONE: \"NONE\",\r\n  PENDING: \"PENDING\",\r\n  DONE: \"DONE\",\r\n  ERROR: \"ERROR\",\r\n};\r\n\r\nconst ModelUpload = () => {\r\n  const [fileProperties, setFileProperties] = useState({\r\n    fileIsH5: null,\r\n  });\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(uploadStatuses.NONE);\r\n\r\n  const handleFiles = async (event) => {\r\n    const f = event.target.files[0];\r\n    setFile(f);\r\n    setUploadStatus(uploadStatuses.NONE);\r\n\r\n    console.log(f);\r\n    const isFormatValid = f.name.indexOf(\".h5\") > -1;\r\n\r\n    if (!isFormatValid) {\r\n      setFileProperties({\r\n        fileIsH5: false,\r\n      });\r\n      return;\r\n    }\r\n\r\n    setFileProperties({\r\n      fileIsH5: true,\r\n    });\r\n  };\r\n\r\n  const fileIsChosen = fileProperties.fileIsH5 != null;\r\n  const fileReadyToUpload = fileProperties.fileIsH5 === true;\r\n\r\n  const upload = async (e) => {\r\n    setUploadStatus(uploadStatuses.PENDING);\r\n\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"tf_model\", file);\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/model/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        setUploadStatus(uploadStatuses.DONE);\r\n      } else {\r\n        setUploadStatus(uploadStatuses.ERROR);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Model Upload</h2>\r\n      <div style={{ display: \"flex\" }}>\r\n        <input type=\"file\" id=\"modelFileUpload\" onChange={handleFiles} />\r\n      </div>\r\n      <br />\r\n      {fileIsChosen ? (\r\n        fileProperties.fileIsH5 === true ? (\r\n          <h3>Model is ready to upload</h3>\r\n        ) : (\r\n          <h3 className=\"red\">File with he model must be .h5 format.</h3>\r\n        )\r\n      ) : (\r\n        <h3>Please choose a .h5 file to upload.</h3>\r\n      )}\r\n      <br />\r\n      <UploadButton onClick={upload} enabled={fileReadyToUpload} />\r\n      <br />\r\n      {uploadStatus === uploadStatuses.PENDING ? (\r\n        <>\r\n          <h3 className=\"yellow\">\r\n            Model is being uploaded and converted to TF Lite...{\" \"}\r\n          </h3>\r\n          <h5>This may take up to 15 seconds</h5>\r\n        </>\r\n      ) : null}\r\n      {uploadStatus === uploadStatuses.DONE ? (\r\n        <h3 className=\"green\">\r\n          Model uploaded and converted to TF Lite successfully\r\n        </h3>\r\n      ) : null}\r\n      {uploadStatus === uploadStatuses.ERROR ? (\r\n        <h3 className=\"red\">\r\n          An error has occured during the upload. Please try again\r\n        </h3>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelUpload;\r\n","import { v4 as uuid4 } from \"uuid\";\r\n\r\nconst idGenerator = uuid4;\r\n\r\nexport default idGenerator;\r\n","/* eslint-disable import/no-extraneous-dependencies */\r\n/* eslint-disable react/forbid-prop-types */\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PropTypes from \"prop-types\";\r\nimport idGen from \"../../utils/idGenerator\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst modelToViewNotation = {\r\n  supportCode: \"Support Code\",\r\n  wellBeingScore: \"Wellbing Score\",\r\n  weeklySteps: \"Weekly Steps\",\r\n  weeklyCalls: \"Weekly Calls\",\r\n  errorRate: \"Error Rate\",\r\n  postCode: \"Post Code\",\r\n};\r\n\r\nconst DataTable = ({ data }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {Object.keys(data[0]).map((key) => {\r\n              return <TableCell>{modelToViewNotation[key]}</TableCell>;\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((entry) => (\r\n            <TableRow key={entry.id}>\r\n              {Object.values(entry).map((val) => {\r\n                return (\r\n                  <TableCell key={idGen()} component=\"th\" scope=\"row\">\r\n                    {val}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default DataTable;\r\n","/* eslint-disable react/jsx-one-expression-per-line */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nconst DataViewer = () => {\r\n  const [tableData, setTableData] = useState(null);\r\n  const [numberOfEntries, setNumberOfEntres] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n    const getData = async () => {\r\n      await sleep(500);\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const body = JSON.stringify({});\r\n\r\n      try {\r\n        const res = await axios.get(\"./api/data/\", body, config);\r\n        // const parsedData = res.data.map((entry) => JSON.parse(entry));\r\n        console.log(res.data);\r\n        // const parsedData = JSON.parse(res.data);\r\n        const payload = res.data;\r\n        setTableData(payload.data.map((entry) => JSON.parse(entry)));\r\n        setNumberOfEntres(payload.numberOfEntries);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1> The Aggregator </h1>\r\n      {numberOfEntries ? (\r\n        <>\r\n          <h2>Total entries: {numberOfEntries}</h2>\r\n          <br />\r\n          <h3>Latest {Math.min(numberOfEntries, 10)} entries:</h3>\r\n          <DataTable data={tableData} />\r\n        </>\r\n      ) : (\r\n        <h3>Loading data...</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nDataViewer.propTypes = {};\r\n\r\nexport default DataViewer;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\n// import ReactSandbox from \"./components/_Debugging/Sandbox/Pages/ReactSandbox\";\nimport Container from \"./components/AppContainer\";\nimport Header from \"./components/Header\";\nimport ModelList from \"./components/ModelList/ModelList\";\nimport ModelUpload from \"./components/ModelUpload/ModelUpload\";\nimport \"./App.css\";\nimport { Register } from \"./components/auth/Register\";\nimport DataViewer from \"./components/DataViewer/DataViewer\";\n\nconst Redirect = ({ path }) => {\n  useHistory().push(path);\n  return <></>;\n};\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Container>\n        <Switch>\n          {/* <Route path=\"/login\" component={Login} /> */}\n          {/* <Route path=\"/register\" component={Register} /> */}\n          <Route path=\"/modellist\" component={ModelList} />\n          <Route path=\"/modelupload\" component={ModelUpload} />\n          <Route path=\"/dataViewer\" component={DataViewer} />\n          {/* <Route path=\"/test\" component={ReactSandbox} /> */}\n        </Switch>\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","import { REGISTER_SUCCESS, REGISTER_FAIL } from \"../actions\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nimport { ADD_ORDER } from \"../actions\";\r\n\r\nconst app = combineReducers({ auth });\r\n\r\nexport default app;\r\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\n\r\nexport function validateType(obj, types) {\r\n  if (Object.keys(obj).length !== Object.keys(types).length) {\r\n    throw new TypeError(\"wrong type\");\r\n  }\r\n\r\n  for (const [key, value] of Object.entries(obj)) {\r\n    if (!types[key] || (value != null && types[key] !== typeof value)) {\r\n      throw new TypeError(`key ${key} value ${value}`);\r\n    }\r\n  }\r\n}\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as StoreProvider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport App from \"./App\";\n\nimport storeAndPersistor from \"./store/store\";\n\nconst { store, persistor } = storeAndPersistor;\n\nconst baseSize = 1;\nconst styles = (theme) => ({\n  \"@global\": {\n    // MUI typography elements use REMs, so you can scale the global\n    // font size by setting the font-size on the <html> element.\n    html: {\n      // fontSize: baseSize * 1.4 + \"em\",\n      [theme.breakpoints.up(\"sm\")]: {\n        fontSize: baseSize * 1.1 + \"em\",\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        fontSize: baseSize * 1.4 + \"em\",\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        fontSize: baseSize * 1.5 + \"em\",\n      },\n    },\n  },\n});\n\nconst Appp = withStyles(styles)(App);\nReactDOM.render(\n  <StoreProvider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Appp />\n    </PersistGate>\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}